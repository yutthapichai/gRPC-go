// Code generated by protoc-gen-go. DO NOT EDIT.
// source: Calculator/calpb/calcu.proto

package calpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SumRequest struct {
	FirstNumber          int32    `protobuf:"varint,1,opt,name=first_number,json=firstNumber,proto3" json:"first_number,omitempty"`
	SecondNumber         int32    `protobuf:"varint,2,opt,name=second_number,json=secondNumber,proto3" json:"second_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumRequest) Reset()         { *m = SumRequest{} }
func (m *SumRequest) String() string { return proto.CompactTextString(m) }
func (*SumRequest) ProtoMessage()    {}
func (*SumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_41636d21e3a09d0c, []int{0}
}

func (m *SumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumRequest.Unmarshal(m, b)
}
func (m *SumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumRequest.Marshal(b, m, deterministic)
}
func (m *SumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumRequest.Merge(m, src)
}
func (m *SumRequest) XXX_Size() int {
	return xxx_messageInfo_SumRequest.Size(m)
}
func (m *SumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SumRequest proto.InternalMessageInfo

func (m *SumRequest) GetFirstNumber() int32 {
	if m != nil {
		return m.FirstNumber
	}
	return 0
}

func (m *SumRequest) GetSecondNumber() int32 {
	if m != nil {
		return m.SecondNumber
	}
	return 0
}

type SumRespone struct {
	SumResult            int32    `protobuf:"varint,1,opt,name=sum_result,json=sumResult,proto3" json:"sum_result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumRespone) Reset()         { *m = SumRespone{} }
func (m *SumRespone) String() string { return proto.CompactTextString(m) }
func (*SumRespone) ProtoMessage()    {}
func (*SumRespone) Descriptor() ([]byte, []int) {
	return fileDescriptor_41636d21e3a09d0c, []int{1}
}

func (m *SumRespone) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumRespone.Unmarshal(m, b)
}
func (m *SumRespone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumRespone.Marshal(b, m, deterministic)
}
func (m *SumRespone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumRespone.Merge(m, src)
}
func (m *SumRespone) XXX_Size() int {
	return xxx_messageInfo_SumRespone.Size(m)
}
func (m *SumRespone) XXX_DiscardUnknown() {
	xxx_messageInfo_SumRespone.DiscardUnknown(m)
}

var xxx_messageInfo_SumRespone proto.InternalMessageInfo

func (m *SumRespone) GetSumResult() int32 {
	if m != nil {
		return m.SumResult
	}
	return 0
}

type SumManyRequest struct {
	K                    int32    `protobuf:"varint,1,opt,name=k,proto3" json:"k,omitempty"`
	N                    int32    `protobuf:"varint,2,opt,name=N,proto3" json:"N,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumManyRequest) Reset()         { *m = SumManyRequest{} }
func (m *SumManyRequest) String() string { return proto.CompactTextString(m) }
func (*SumManyRequest) ProtoMessage()    {}
func (*SumManyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_41636d21e3a09d0c, []int{2}
}

func (m *SumManyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumManyRequest.Unmarshal(m, b)
}
func (m *SumManyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumManyRequest.Marshal(b, m, deterministic)
}
func (m *SumManyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumManyRequest.Merge(m, src)
}
func (m *SumManyRequest) XXX_Size() int {
	return xxx_messageInfo_SumManyRequest.Size(m)
}
func (m *SumManyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SumManyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SumManyRequest proto.InternalMessageInfo

func (m *SumManyRequest) GetK() int32 {
	if m != nil {
		return m.K
	}
	return 0
}

func (m *SumManyRequest) GetN() int32 {
	if m != nil {
		return m.N
	}
	return 0
}

type SumManyRespone struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumManyRespone) Reset()         { *m = SumManyRespone{} }
func (m *SumManyRespone) String() string { return proto.CompactTextString(m) }
func (*SumManyRespone) ProtoMessage()    {}
func (*SumManyRespone) Descriptor() ([]byte, []int) {
	return fileDescriptor_41636d21e3a09d0c, []int{3}
}

func (m *SumManyRespone) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumManyRespone.Unmarshal(m, b)
}
func (m *SumManyRespone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumManyRespone.Marshal(b, m, deterministic)
}
func (m *SumManyRespone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumManyRespone.Merge(m, src)
}
func (m *SumManyRespone) XXX_Size() int {
	return xxx_messageInfo_SumManyRespone.Size(m)
}
func (m *SumManyRespone) XXX_DiscardUnknown() {
	xxx_messageInfo_SumManyRespone.DiscardUnknown(m)
}

var xxx_messageInfo_SumManyRespone proto.InternalMessageInfo

func (m *SumManyRespone) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*SumRequest)(nil), "calcu.SumRequest")
	proto.RegisterType((*SumRespone)(nil), "calcu.SumRespone")
	proto.RegisterType((*SumManyRequest)(nil), "calcu.SumManyRequest")
	proto.RegisterType((*SumManyRespone)(nil), "calcu.SumManyRespone")
}

func init() { proto.RegisterFile("Calculator/calpb/calcu.proto", fileDescriptor_41636d21e3a09d0c) }

var fileDescriptor_41636d21e3a09d0c = []byte{
	// 254 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x5d, 0x25, 0x2d, 0x8e, 0x51, 0xe8, 0x82, 0x22, 0x45, 0x41, 0xd7, 0x4b, 0x41, 0xad,
	0xa2, 0x47, 0x6f, 0x7a, 0x36, 0x87, 0xc6, 0x93, 0x97, 0x92, 0xac, 0x23, 0x94, 0xee, 0x66, 0xe3,
	0xee, 0x8e, 0xe0, 0xc9, 0xbf, 0x2e, 0x9d, 0x6c, 0x49, 0x8b, 0x97, 0xc0, 0x7b, 0xf3, 0xf2, 0xcd,
	0xec, 0x83, 0xb3, 0x97, 0xca, 0x68, 0x32, 0x55, 0x74, 0xfe, 0x4e, 0x57, 0xa6, 0xad, 0x57, 0x5f,
	0x4d, 0xd3, 0xd6, 0xbb, 0xe8, 0x64, 0xc6, 0x42, 0xbd, 0x01, 0x94, 0x64, 0x67, 0xf8, 0x45, 0x18,
	0xa2, 0xbc, 0x84, 0xfc, 0x73, 0xe1, 0x43, 0x9c, 0x37, 0x64, 0x6b, 0xf4, 0xa7, 0xe2, 0x42, 0x4c,
	0xb2, 0xd9, 0x01, 0x7b, 0x05, 0x5b, 0xf2, 0x0a, 0x0e, 0x03, 0x6a, 0xd7, 0x7c, 0xac, 0x33, 0xbb,
	0x9c, 0xc9, 0x3b, 0xb3, 0x0b, 0xa9, 0xeb, 0x44, 0x0d, 0xad, 0x6b, 0x50, 0x9e, 0x03, 0x04, 0xb2,
	0x73, 0x8f, 0x81, 0x4c, 0x4c, 0xcc, 0xfd, 0xc0, 0x73, 0x32, 0x51, 0xdd, 0xc0, 0x51, 0x49, 0xf6,
	0xb5, 0x6a, 0x7e, 0xd6, 0x67, 0xe4, 0x20, 0x96, 0x29, 0x27, 0x96, 0x2b, 0x55, 0xa4, 0x2d, 0xa2,
	0x50, 0x93, 0x8d, 0x74, 0x87, 0x3f, 0x81, 0xc1, 0x16, 0x3a, 0xa9, 0x87, 0x5f, 0x18, 0xf5, 0x0d,
	0x94, 0xe8, 0xbf, 0x17, 0x1a, 0xe5, 0x2d, 0xec, 0x95, 0x64, 0xe5, 0x68, 0xda, 0x75, 0xd1, 0xbf,
	0x7d, 0xbc, 0x65, 0x31, 0x59, 0xed, 0xc8, 0x27, 0x18, 0xa6, 0x6d, 0xf2, 0xb8, 0x9f, 0x6f, 0xdc,
	0x3a, 0xfe, 0x67, 0xa7, 0x5f, 0xef, 0xc5, 0xf3, 0xf0, 0x3d, 0xe3, 0xde, 0xeb, 0x01, 0x57, 0xfe,
	0xf8, 0x17, 0x00, 0x00, 0xff, 0xff, 0x10, 0x55, 0x30, 0x82, 0x92, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CalculatorServiceClient is the client API for CalculatorService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalculatorServiceClient interface {
	Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumRespone, error)
	SumMany(ctx context.Context, in *SumManyRequest, opts ...grpc.CallOption) (CalculatorService_SumManyClient, error)
}

type calculatorServiceClient struct {
	cc *grpc.ClientConn
}

func NewCalculatorServiceClient(cc *grpc.ClientConn) CalculatorServiceClient {
	return &calculatorServiceClient{cc}
}

func (c *calculatorServiceClient) Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumRespone, error) {
	out := new(SumRespone)
	err := c.cc.Invoke(ctx, "/calcu.CalculatorService/Sum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calculatorServiceClient) SumMany(ctx context.Context, in *SumManyRequest, opts ...grpc.CallOption) (CalculatorService_SumManyClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalculatorService_serviceDesc.Streams[0], "/calcu.CalculatorService/SumMany", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculatorServiceSumManyClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CalculatorService_SumManyClient interface {
	Recv() (*SumManyRespone, error)
	grpc.ClientStream
}

type calculatorServiceSumManyClient struct {
	grpc.ClientStream
}

func (x *calculatorServiceSumManyClient) Recv() (*SumManyRespone, error) {
	m := new(SumManyRespone)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// CalculatorServiceServer is the server API for CalculatorService service.
type CalculatorServiceServer interface {
	Sum(context.Context, *SumRequest) (*SumRespone, error)
	SumMany(*SumManyRequest, CalculatorService_SumManyServer) error
}

// UnimplementedCalculatorServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCalculatorServiceServer struct {
}

func (*UnimplementedCalculatorServiceServer) Sum(ctx context.Context, req *SumRequest) (*SumRespone, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sum not implemented")
}
func (*UnimplementedCalculatorServiceServer) SumMany(req *SumManyRequest, srv CalculatorService_SumManyServer) error {
	return status.Errorf(codes.Unimplemented, "method SumMany not implemented")
}

func RegisterCalculatorServiceServer(s *grpc.Server, srv CalculatorServiceServer) {
	s.RegisterService(&_CalculatorService_serviceDesc, srv)
}

func _CalculatorService_Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculatorServiceServer).Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calcu.CalculatorService/Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculatorServiceServer).Sum(ctx, req.(*SumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalculatorService_SumMany_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SumManyRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CalculatorServiceServer).SumMany(m, &calculatorServiceSumManyServer{stream})
}

type CalculatorService_SumManyServer interface {
	Send(*SumManyRespone) error
	grpc.ServerStream
}

type calculatorServiceSumManyServer struct {
	grpc.ServerStream
}

func (x *calculatorServiceSumManyServer) Send(m *SumManyRespone) error {
	return x.ServerStream.SendMsg(m)
}

var _CalculatorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calcu.CalculatorService",
	HandlerType: (*CalculatorServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sum",
			Handler:    _CalculatorService_Sum_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SumMany",
			Handler:       _CalculatorService_SumMany_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "Calculator/calpb/calcu.proto",
}
